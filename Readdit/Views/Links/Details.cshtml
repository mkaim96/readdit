@using Microsoft.AspNetCore.Identity
@using Readdit.Domain.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@model Readdit.Models.Links.DetailsViewModel

@{
    ViewData["Title"] = "Details";
    ViewData["LinkId"] = Model.Link.Id;
    ViewData["returnUrl"] = $"/links/details/{Model.Link.Id}";
}

@if(SignInManager.IsSignedIn(User))
{
    if(User.Identity.Name == Model.Link.Author) 
    {
        <div class="buttons-group">
            <a class="button no-decoration" 
                asp-action="Edit"
                asp-controller="Links"
                asp-route-id="@Model.Link.Id">Update this link</a>
            <a class="button no-decoration"
                asp-action="Delete"
                asp-controller="Links"
                asp-route-id="@Model.Link.Id">Delete this link</a>
        </div>
    }
}

<partial name="_linkPartial" model="@Model.Link"/>

<partial name="_createCommentPartial" model="@Model.CreateComment" view-data="@ViewData"/>

<br /> <br />

<h5>Comments (@Model.Link.CommentsCount)</h5>


@foreach(var comment in Model.Comments)
{
    <partial name="_commentPartial", model="@comment" />
}


